<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.2.6.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	
	<groupId>com.mindtree.webflux.poc</groupId>
	<artifactId>webflux-microservice-poc</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>webflux-microservice-poc</name>
	<description>Demo project for Spring Boot  Webflux</description>
	<packaging>jar</packaging>

	<properties>
		<java.version>1.8</java.version>
		<maven-jar-plugin.version>3.1.1</maven-jar-plugin.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-mongodb-reactive</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-webflux</artifactId>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
		  <groupId>junit</groupId>
		  <artifactId>junit</artifactId>
		  <scope>test</scope>
		</dependency>
		<dependency>
			<groupId>de.flapdoodle.embed</groupId>
			<artifactId>de.flapdoodle.embed.mongo</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.projectreactor</groupId>
			<artifactId>reactor-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

<!-- 	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build> -->
	
	
	
	<build>
		<finalName>webflux-microservice-poc</finalName>
		<plugins>
		
			<!-- Set a JDK compiler level -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>
			
			
			<!-- This plugin puts all dependencies in the target/classes/lib folder-->
			<plugin>
			    <groupId>org.apache.maven.plugins</groupId>
			    <artifactId>maven-dependency-plugin</artifactId>
			    <executions>
			        <execution>
			            <id>copy-dependencies</id>
			            <phase>prepare-package</phase>
			            <goals>
			                <goal>copy-dependencies</goal>
			            </goals>
			            <configuration>
			                <outputDirectory>${project.build.directory}/classes/lib</outputDirectory>
			                <overWriteReleases>false</overWriteReleases>
			                <overWriteSnapshots>false</overWriteSnapshots>
			                <overWriteIfNewer>true</overWriteIfNewer>
			            </configuration>
			        </execution>
			    </executions>
			</plugin>

			<!-- Make this jar executable -->
			<plugin>
				<!-- We should not use mave jar plugin.  Instated of that we should use spring provided maven plugin  -->
				<!-- <groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId> -->
				
				<groupId>org.springframework.boot</groupId>
    			<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration> 
				  <archive>
					<manifest>
						<!-- Jar file entry point -->
						<mainClass>com.mindtree.webflux.poc.WebfluxMicroservicePocApplication</mainClass>
					</manifest>
				  </archive>
				  <descriptorRefs>
		            	<descriptorRef>jar-with-dependencies</descriptorRef>
		          </descriptorRefs>
				</configuration>
			</plugin>

		</plugins>
	</build>
	
	
	

</project>
